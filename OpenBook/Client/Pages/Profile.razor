@page "/profile"

@using OpenBook.Shared.Dtos;
@using OpenBook.Shared.OutputData;
@using System.Net.Http.Headers;
@using OpenBook.Shared.SupportData;
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager navigation
@inject HttpClient client

<style>
    .mainContainer{
        display: flex;
        flex-direction: column;
    }
    .columnContainer{
        text-align: center;
        background: #c7e8ff;
        border-radius: 25%;
        padding: 5%;
    }
    .rowContainer{
        display: flex;
        flex-direction: row;
        justify-content: space-around;
        padding: 5%;
    }
    .innerDiv{
        background: #c7e8ff;
        width: 40%;
        border-radius: 15%;
        padding: 5%;
    }
</style>

<h3 style="text-align: center">Личный кабинет</h3>
@if (user == null)
{
        <span>Загрузка...</span>
}
else
{
        <div class="mainContainer">
            <div class="rowContainer">
                <div class="innerDiv">
                @if (!editMode)
                {
                            <p style="font-weight: 300; font-size: x-large">@user.Value.Name</p>
                            <br>
                            <button @onclick="EditChange">Изменить</button>                        
                }
                else
                {
                            <p style="font-weight: 300; font-size: x-large">@user.Value.Name</p>
                            <button @onclick="EditChange">Сохранить</button>                            
                }

                    <span>Почта:</span>
                    <p>@user.Value.Email</p>
                    <br>
                </div>
                <div  class="innerDiv">
                    <span>Роль:</span>
                    <p>@user.Value.Role.Name</p>

                    <p>
                    @if (user.Value.IsVerified)
                    {
                                <span style="color: green;">Ваш аккаунт верифицирован</span>
                    }
                    else
                    {
                                <span>Ваш аккаунт не верифицирован!</span>
                                <br>
                                <button>Пройти верификацию</button>
                    }
                    </p>
                    <p>
                        <button>Изменить пароль</button>
                    </p>


                @if (user.Value.Role.Name == "Admin" || user.Value.Role.Name == "SuperAdmin")
                {
                            <p>
                                <button @onclick="GoToAdminPanel">Админ панель</button>
                            </p>                    
                }
                    <p>
                        <button @onclick="(() => GoToEditBooks(0))">Мои книги</button>
                    </p>
                </div>
            </div>
        </div>
}

@code {
    bool? isAuth = null;
    AuthView authView = new AuthView();
    AuthInfo authInfo = new AuthInfo();
    Response? response;

    Response<UserDto>? user;

    bool editMode = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var cookieContent = await localStorage.GetItemAsync<AuthInfo>(AuthInfo.CookieName);
            client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", cookieContent.Key);
            if (cookieContent != null && await CheckAuth())
            {
                isAuth = true;
            }
        }
        catch (Exception ex)
        {
            isAuth = false;
            navigation.NavigateTo("SignIn");
        }
    }
    async Task<bool> CheckAuth()
    {
        user = await client.GetFromJsonAsync<Response<UserDto>>("https://localhost:7190/api/Auth/GetUserInfo");
        return user.IsSuccess;
    }
    async Task EditChange()
    {
        if (editMode)
        {
            using HttpResponseMessage TestResponse = await client.PostAsJsonAsync("https://localhost:7190/api/User/UpdateWithEntity", user);
            editMode = false;
        }
        else
        {
            editMode = true;
        }
    }
    void GoToAdminPanel()
    {
        navigation.NavigateTo("adminpanel");
    }
    void GoToEditBooks(int id)
    {
        navigation.NavigateTo($"mybooks");
    }
}