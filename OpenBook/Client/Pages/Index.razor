@page "/"
@layout PageLayout
@using OpenBook.Shared.Dtos;
@using OpenBook.Shared.OutputData;
@using System.Net.Http.Headers;
@using OpenBook.Shared.SupportData;
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager navigation
@inject HttpClient client

<style>
    .flexContainer {
        display: flex;
        flex-direction: column;
        flex-wrap: wrap;
        width: 100%;
        align-items: center;
    }
    .innerContainer {
        min-height: 50vh;
        width: 100%;
        text-align: center;
        position: relative; /* Добавляем позиционирование для псевдоэлемента */
        color: white;
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
    }
    .innerContainer::before { /* Добавляем псевдоэлемент, который будет служить прозрачным черным блоком */
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5); /* Устанавливаем прозрачный черный цвет */
        z-index: 1; /* Поднимаем слой над изображением */
    }
    .innerContent { /* Контейнер для содержимого, чтобы оно отображалось поверх прозрачного блока */
        position: relative;
        z-index: 2; /* Устанавливаем слой поверх псевдоэлемента */
    }
    .img1 {
        background-image: url('../image/fight_on_the_mountain.jpg');
    }
    .img2 {
        background-image: url('../image/castle.jpg');
    }
    .img3 {
        background-image: url('../image/night_star.jpg');
    }
</style>

<div class="flexContainer">
    <div class="text-center w-50 m-5" style="height:750px">
        <div id="carouselExampleCaptions" class="carousel slide" data-bs-ride="carousel">
            <div class="carousel-indicators">
                <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
                <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="1" aria-label="Slide 2"></button>
                <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="2" aria-label="Slide 3"></button>
            </div>
            <div class="carousel-inner">
                @if (books != null)
                {
                    @foreach (var book in books.Value.Data)
                    {
                        <div class="carousel-item active">
                            @if (book.Cover.Length < 20)
                            {
                                <img src="/image/DefaultCover.jpg" class="d-block" style="width: 100%; height:750px" alt="Обложка книги">
                            }
                            else
                            {
                                <img src="data:image/jpeg;base64,@Convert.ToBase64String(book.Cover)" class="d-block" style="width: 100%; height:750px" alt="Обложка книги">
                            }
                            <div class="carousel-caption d-none d-md-block" style="background: black; opacity: 0.5">
                                <h5 style="color: transparent; opacity: 100%">@book.Name</h5>
                                <p style="color: transparent; opacity: 100%">@book.Author</p>
                            </div>
                            <div class="carousel-caption d-none d-md-block">
                                <h5>@book.Name</h5>
                                <p>@book.Author</p>
                            </div>
                        </div>                    
                    }                 
                } 
            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="prev" style="background: black; opacity: 0.3" onmouseover="this.style.opacity='0.5';" onmouseout="this.style.opacity='0.3';">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="next" style="background: black; opacity: 0.3" onmouseover="this.style.opacity='0.5';" onmouseout="this.style.opacity='0.3';">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
    </div>
    <div class="innerContainer img1">
        <div class="innerContent">
            <div style="padding: 15px;">
                <h2 style="margin-bottom: auto;">Безграничный мир</h2>
                <p style="margin-top: 15%; margin-bottom: 15%;">Какой-то текст</p>
                <button class="btn btn-primary" @onclick="GoToBooks">Читать</button>
            </div>
        </div>
    </div>
    <div class="innerContainer img2">
        <div class="innerContent">
            <div style="padding: 15px;">
                <h2>Безграничное творчество</h2>
                <p style="margin-top: 15%; margin-bottom: 15%;">Какой-то текст</p>
                <button class="btn btn-primary" @onclick="GoToMyBooks">Стать автором</button>
            </div>
        </div>
    </div>
    <div class="innerContainer img3">
        <div class="innerContent">
            <div style="padding: 15px;">
                <h2>О проекте</h2>
                <p style="margin-top: 15%; margin-bottom: 15%;">Какой-то текст</p>
            </div>
        </div>
    </div>
</div>

@code {

    Response<DataPage<BookDto>>? books;

    protected override async Task OnInitializedAsync()
    {
        books = await client.GetFromJsonAsync<Response<DataPage<BookDto>>>($"https://localhost:7190/api/Like/GetPopularBooks?start=0&count=3");
        int a = 0;
    }

    void GoToBooks()
    {
        navigation.NavigateTo("books");
    }
    void GoToMyBooks()
    {
        navigation.NavigateTo("mybooks");
    }
}
